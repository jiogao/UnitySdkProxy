#!/bin/bash

echo "Shell 输出脚本名称及参数";
# echo "执行的脚本名：$0";
# echo "第一个参数为：$1";
# echo "第二个参数为：$2";
# echo "第三个参数为：$3";
echo "所有参数为：$@";
# echo "当前选项：$-";

projectPath="/Users/Megatron/Documents/work/QKSdkProxy_ios/Unity-iPhone.xcodeproj"
optionsPlistPath="/Users/Megatron/Documents/work/UnitySdkProxy/iOS/ExportOptions.plist"
# optionsPlistPath="$(PWD)/ExportOptions.plist"

# 工程文件夹路径
projectDir="${projectPath%/*}"

# 导出配置文件生成位置 exportOptions.plist
exportOptionsPlistPath="${projectDir}/build/exportOptions.plist"
# /usr/libexec/PlistBuddy -c "Save" "${exportOptionsPlistPath}"


# 一、读取参数
# SdkProxy_channel 中的文件名
channelName=`/usr/libexec/PlistBuddy -c "print channelName" "${optionsPlistPath}"`
# target名
version=`/usr/libexec/PlistBuddy -c "print version" "${optionsPlistPath}"`
buildVersion=`/usr/libexec/PlistBuddy -c "print buildVersion" "${optionsPlistPath}"`
temDisplayName=`/usr/libexec/PlistBuddy -c "print bundleDisplayName" "${optionsPlistPath}"`
bundleDisplayName="${temDisplayName-e}"

scheme=`/usr/libexec/PlistBuddy -c "print scheme" "${optionsPlistPath}"`
#app-store, ad-hoc, enterprise, development
configuration=`/usr/libexec/PlistBuddy -c "print configuration" "${optionsPlistPath}"`
CODE_SIGN_IDENTITY=`/usr/libexec/PlistBuddy -c "print CODE_SIGN_IDENTITY" "${optionsPlistPath}"`
DEVELOPMENT_TEAM=`/usr/libexec/PlistBuddy -c "print DEVELOPMENT_TEAM" "${optionsPlistPath}"`
PRODUCT_BUNDLE_IDENTIFIER=`/usr/libexec/PlistBuddy -c "print PRODUCT_BUNDLE_IDENTIFIER" "${optionsPlistPath}"`
PROVISIONING_PROFILE_SPECIFIER=`/usr/libexec/PlistBuddy -c "print PROVISIONING_PROFILE_SPECIFIER" "${optionsPlistPath}"`
PROVISIONING_PROFILE=`/usr/libexec/PlistBuddy -c "print PROVISIONING_PROFILE" "${optionsPlistPath}"`
# 选择证书方式 CODE_SIGN_STYLE=Manual/Automatic
CODE_SIGN_STYLE=Manual

signingStyle=`echo "$CODE_SIGN_STYLE" | tr '[A-Z]' '[a-z]'`

#app-store, ad-hoc, enterprise, development
method="$configuration"

# 设置 exportOptionsPlist 可以先手动到处一个ipa 参考导出目录中的 ExportOptions.plist 文件
/usr/libexec/PlistBuddy -c "Add :compileBitcode bool" "${exportOptionsPlistPath}"
/usr/libexec/PlistBuddy -c "Set :compileBitcode NO" "${exportOptionsPlistPath}"
/usr/libexec/PlistBuddy -c "Add :method string" "${exportOptionsPlistPath}"
/usr/libexec/PlistBuddy -c "Set :method $method" "${exportOptionsPlistPath}"
/usr/libexec/PlistBuddy -c "Delete :provisioningProfiles dict" "${exportOptionsPlistPath}"
/usr/libexec/PlistBuddy -c "Add :provisioningProfiles dict" "${exportOptionsPlistPath}"
/usr/libexec/PlistBuddy -c "Add :provisioningProfiles:$PRODUCT_BUNDLE_IDENTIFIER string $PROVISIONING_PROFILE_SPECIFIER" "${exportOptionsPlistPath}"
/usr/libexec/PlistBuddy -c "Add :signingCertificate string" "${exportOptionsPlistPath}"
/usr/libexec/PlistBuddy -c "Set :signingCertificate $CODE_SIGN_IDENTITY" "${exportOptionsPlistPath}"
/usr/libexec/PlistBuddy -c "Add :signingStyle string" "${exportOptionsPlistPath}"
/usr/libexec/PlistBuddy -c "Set :signingStyle $signingStyle" "${exportOptionsPlistPath}"
/usr/libexec/PlistBuddy -c "Add :stripSwiftSymbols bool" "${exportOptionsPlistPath}"
/usr/libexec/PlistBuddy -c "Set :stripSwiftSymbols YES" "${exportOptionsPlistPath}"
/usr/libexec/PlistBuddy -c "Add :teamID string" "${exportOptionsPlistPath}"
/usr/libexec/PlistBuddy -c "Set :teamID $DEVELOPMENT_TEAM" "${exportOptionsPlistPath}"
/usr/libexec/PlistBuddy -c "Add :thinning string" "${exportOptionsPlistPath}"
/usr/libexec/PlistBuddy -c "Set :thinning <none>" "${exportOptionsPlistPath}"
/usr/libexec/PlistBuddy -c "Save" "${exportOptionsPlistPath}"

# 拷贝文件、添加到工程引用、打包前设置
/Users/Megatron/Documents/work/UnitySdkProxy/iOS/rubyShell/autoSetCommand.rb \
 "$projectPath" "$channelName" "$PRODUCT_BUNDLE_IDENTIFIER"

# 各种输出文件夹
# 时间戳
buildTime=$(date +%Y%m%d%H%M)
derivedDataPath="${projectDir}/build/DerivedData"
archivePath="${projectDir}/build/archive/${configuration}.xcarchive"
exportPath="${projectDir}/build/export/${bundleDisplayName}_${configuration}_${buildTime}"

# 二、修改 Info.plist
infoPlistPath="${projectDir}/Info.plist"
echo $infoPlistPath
/usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString ${version}" "${infoPlistPath}"
/usr/libexec/PlistBuddy -c "Set :CFBundleVersion ${buildVersion}" "${infoPlistPath}"
/usr/libexec/PlistBuddy -c "Set :CFBundleDisplayName ${bundleDisplayName}" "${infoPlistPath}"
/usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier \${PRODUCT_BUNDLE_IDENTIFIER}" "${infoPlistPath}"
/usr/libexec/PlistBuddy -c "Save" "${infoPlistPath}"

# # 三、打开钥匙串访问， 导入证书
# # security unlock-keychain "-p" 系统密码 "/Users/***/Library/Keychains/login.keychain" ;

# 四、清理项目
xcodebuild clean -project "$projectPath" -scheme "$scheme"
# -configuration $configuration clean

# 五、编译
# 1、编译 pods
# xcodebuild -workspace ***.xcworkspace -scheme Pods-*** -derivedDataPath build/DerivedData OBJROOT=$(PWD)/build SYMROOT=$(PWD)/build -configuration $(configWay)
# 2、编译 workspace

# xcodebuild archive -workspace "${projectPath}/project.xcworkspace" \
xcodebuild archive -project $projectPath -scheme "$scheme" \
 -derivedDataPath "$derivedDataPath" -archivePath "$archivePath" \
 DEVELOPMENT_TEAM="$DEVELOPMENT_TEAM" CODE_SIGN_IDENTITY="$CODE_SIGN_IDENTITY" \
 PRODUCT_BUNDLE_IDENTIFIER="$PRODUCT_BUNDLE_IDENTIFIER" PROVISIONING_PROFILE_SPECIFIER="$PROVISIONING_PROFILE_SPECIFIER" \
 PROVISIONING_PROFILE="$PROVISIONING_PROFILE" \
 IPHONEOS_DEPLOYMENT_TARGET="8.0" CODE_SIGN_STYLE="$CODE_SIGN_STYLE"

# -configuration "$configuration" 

echo `/usr/libexec/PlistBuddy -c "print" "$exportOptionsPlistPath"`
# 3、导出ipa
xcodebuild -exportArchive -archivePath "$archivePath" -exportPath "$exportPath" -exportOptionsPlist "$exportOptionsPlistPath"
# -exportFormat IPA  -exportProvisioningProfile $profileName

# pause
