#!/bin/bash

echo "Shell 输出脚本名称及参数";
# echo "执行的脚本名：$0";
# echo "第一个参数为：$1";
# echo "第二个参数为：$2";
# echo "第三个参数为：$3";
echo "所有参数为：$@";
# echo "当前选项：$-";

projectPath=/Users/Megatron/Documents/work/QKSdkProxy_ios/Unity-iPhone.xcodeproj
sdkName=test
projectDir=${projectPath%/*}
echo "projectPath"
echo $projectPath
echo $sdkName
echo $projectDir


# /Users/Megatron/Documents/work/UnitySdkProxy/iOS/rubyShell/autoSetCommand.rb\
#  $projectPath $sdkName

buildNumberInfo="100"
tembundleDisplayName="测试包"
bundleDisplayName="${tembundleDisplayName-e}"

infoPathFormat="$projectDir/Info.plist"
echo $infoPathFormat
/usr/libexec/PlistBuddy -c "Set :CFBundleVersion ${buildNumberInfo}" "${infoPathFormat}"
/usr/libexec/PlistBuddy -c "Set :CFBundleDisplayName ${bundleDisplayName}" "${infoPathFormat}"

xcodebuild -project $projectPath -scheme Unity-iPhone clean

xcodebuild -project $projectPath -scheme Unity-iPhone  -configuration "Debug" -sdk iphoneos CONFIGURATION_BUILD_DIR='/Users/Megatron/Documents/temp'



# #从plist文件中读取ipa包名和配置文件名
# profile_Name=`/usr/libexec/PlistBuddy -c "print profile_Name" ./PackageConfig/packageExample.plist`
# ipa_Name=`/usr/libexec/PlistBuddy -c "print app_Name" ./PackageConfig/packageExample.plist`

# #进入工程目录
# cd ../PackageExample
# echo "go to packageExample workspace path"

# #报名时根据时间戳命名的，所以这里有用到
# buildTime=$(date +%Y%m%d%H%M)

# profile="${profile_Name}"

# echo $profile $ipa_Name

# #一下方法主要是创建打包的路径和最后导出的ipa的路径
# if [ ! -d "../PackageShell/Package" ]; then
#     mkdir ../PackageShell/Package
# fi

# if [ ! -d "../PackageShell/Package/ArchiveProduction" ]; then
#     mkdir ../PackageShell/Package/ArchiveProduction
# fi

# if [ ! -d "../PackageShell/Package/ArchiveProduction/QA" ]; then
#     mkdir ../PackageShell/Package/ArchiveProduction/QA
#     echo "Create ArchiveProduction path"
# fi

# if [ ! -d "../PackageShell/Package/ipa" ]; then
#     mkdir ../PackageShell/Package/ipa
# fi

# if [ ! -d "../PackageShell/Package/ipa/QA" ]; then
#     mkdir ../PackageShell/Package/ipa/QA
#     echo "Create ipa path"
# fi

# buildConfiguration="QA"

# buildPath="../PackageShell/Package/ArchiveProduction/QA/${ipa_Name}_${buildTime}.xcarchive"
# ipaName="../PackageShell/Package/ipa/QA/${ipa_Name}_${buildTime}.ipa"

# #先进行clean操作
# #xctool -workspace PackageExample.xcworkspace -scheme PackageExample -configuration ${buildConfiguration} clean
# xcodebuild -workspace PackageExample.xcworkspace -scheme PackageExample -configuration ${buildConfiguration} clean

# #打包的命令
# # xctool -workspace PackageExample.xcworkspace -scheme PackageExample -configuration ${buildConfiguration} archive -archivePath ${buildPath}
# xcodebuild -workspace PackageExample.xcworkspace -scheme PackageExample -configuration ${buildConfiguration} archive -archivePath ${buildPath}

# #导出ipa包的命令，
# xcodebuild -exportArchive -exportFormat IPA -archivePath ${buildPath} -exportPath ${ipaName} -exportProvisioningProfile "$profile"



# # 一、配置参数：
# version=$(shell /usr/libexec/PlistBuddy -c "print :CFBundleShortVersionString" ${infoPath})
# tembundleDisplayName=$(shell /usr/libexec/PlistBuddy -c "print :CFBundleDisplayName" ${infoPath})
# tembuildNumber=$(shell svn info |grep Revision)
# buildNumberInfo=$(shell git log -a |wc -l | sed 's/^[ \t]*//g')
# buildNumber=$(shell git log -1 --pretty=format:%h)_$(shell git log -a |wc -l | sed 's/^[ \t]*//g')

# version="1.0.0"
# tembundleDisplayName="测试包"
# buildNumberInfo="100"
# KEY_enterprise="iPhone Developer: yougaoxiang@7cool.cn (ZSSMLKHVF9)"
# # # 代码中的宏定义，定义 测试环境
# # # serverEnvironment=BUILD_FOR_TEST

# developmentTeam="ZSSMLKHVF9"
# productBundleIdentifier="com.gaoxiangyou.sdkproxytest"
# profileName="iOS Team Provisioning Profile: com.gaoxiangyou.sdkproxytest"
# profileID=14ebf172-c1b2-4a79-b4fe-3bfed79335d1
# #14ebf172-c1b2-4a79-b4fe-3bfed79335d1
# #1022f47e-7f7e-4165-b2a2-37c5219b298b

# archivePath=build/DerivedData/test.xcarchive
# bundleDisplayName="${tembundleDisplayName}-e"
# signKey=${KEY_enterprise}


# configWay=Adhoc
# # # 路径和文件名称 最好不要带空格，会把 shell 脚本 的参数 给 打乱。如果真有空格，就只能做转义了
# # infoPathFormat=$(subst \ ,\\ ,./neighborhood/Support Files/neighborhood-Info.plist)
# infoPathFormat="$projectDir/Info.plist"
# echo $infoPathFormat

# # # 二、修改 企业证书打包的 build 号，显示名称
# /usr/libexec/PlistBuddy -c "Set :CFBundleVersion ${buildNumberInfo}" "${infoPathFormat}"
# /usr/libexec/PlistBuddy -c "Set :CFBundleDisplayName ${bundleDisplayName}" "${infoPathFormat}"

# # # 三、打开钥匙串访问， 导入证书
# # # security unlock-keychain "-p" 系统密码 "/Users/***/Library/Keychains/login.keychain" ;

# # # 四、清理项目
# xcodebuild -project $projectPath -scheme Unity-iPhone -configuration Adhoc clean

# # 五、编译
# # 因为 PackageApplication 已经弃用，改用 xcodebuild -exportArchive ，所以 编译 也改用 archive，xcodebuild archive
# # 1、编译 pods
# # xcodebuild -workspace ***.xcworkspace -scheme Pods-*** -derivedDataPath build/DerivedData OBJROOT=$(PWD)/build SYMROOT=$(PWD)/build -configuration $(configWay)
# # 2、编译 workspace
# xcodebuild -project $projectPath -scheme Unity-iPhone -configuration $(configWay) -derivedDataPath build/DerivedData -archivePath "$(archivePath)" DEVELOPMENT_TEAM="$(developmentTeam)" PRODUCT_BUNDLE_IDENTIFIER="$(productBundleIdentifier)" CODE_SIGN_IDENTITY="$(signKey)" PROVISIONING_PROFILE="$(profileID)" PROVISIONING_PROFILE_SPECIFIER="$(profileName)" IPHONEOS_DEPLOYMENT_TARGET="7.0" archive

# 作者：Yang152412
# 链接：https://www.jianshu.com/p/14f5198bab10
# 來源：简书
# 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

# pause
