// GENERATED BY UNITY. REMOVE THIS COMMENT TO PREVENT OVERWRITING WHEN EXPORTING AGAIN

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
}
}

allprojects {
    repositories {
        google()
        jcenter()
        flatDir {
            dirs 'libs'
        }
    }
    parseLocalProperties()
}

apply plugin: 'com.android.application'

configurations {
    sdktestImplementation
//    sdktestDebugImplementation
//    sdktestReleaseImplementation
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':unity-android-resources')

//    sdktestImplementation project(':GameUSDKLib')
}

android {

    compileSdkVersion ANDROID_COMPLIE_SDK_VERSION
    buildToolsVersion ANDROID_COMPLIE_TOOL_VERSION

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion ANDROID_BUILD_MIN_SDK_VERSION
        targetSdkVersion ANDROID_BUILD_TARGET_SDK_VERSION
        applicationId 'com.qk.hopelegends'
        ndk {
            abiFilters 'armeabi-v7a'
        }
        versionCode 1
        versionName '0.3.0'
    }

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        noCompress = ['.unity3d', '.ress', '.resource', '.obb', 'dev_setting.xml']
        ignoreAssetsPattern = "!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~"
    }

    buildTypes {
        debug {
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'
            signingConfig signingConfigs.debug
            jniDebuggable true
        }
        release {
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'
            signingConfig signingConfigs.debug
        }
    }

    packagingOptions {
        doNotStrip '*/armeabi-v7a/*.so'
    }


    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = true
        }
    }

    //---------- productFlavors ----------
    flavorDimensions "channel"
    productFlavors {
        sdktest {
            dimension "channel"
            applicationId "com.test.test"
        }
    }

    //公共代码位置
    def sdkProxyJavaPath = "../QKSdkProxy/"
    //请先在local.properties中添加目标工程路径, 如： targetProjPath=C\:\\Users\\K\\Desktop\\HopeLegends_Android\\ExportProj\\HopeLegends
    def targetProjPath = project["targetProjPath"]
    def localPath = './'
    def target_src_main = targetProjPath + 'src/main/'
    def local_src_main = localPath + 'src/main/'
    sourceSets {
        main {
            assets.srcDirs = [target_src_main + 'assets']                  // asset资源目录
            jniLibs.srcDirs = [target_src_main + 'jniLibs']                // jniLibs
//            java.srcDirs = [local_src_main + 'java', target_src_main + 'java']    // 指定java源代码目录
            res.srcDirs = [target_src_main + 'res']

            java.srcDirs += target_src_main + 'java'
            java.srcDirs += sdkProxyJavaPath + 'java'
        }
        sdktest {
//            java.srcDirs = ['./src/sdktest/' + 'java']
        }
    }
}

//读取local.properties配置
//请先在local.properties中添加目标工程路径, 如： targetProjPath=C\:\\Users\\K\\Desktop\\HopeLegends_Android\\ExportProj\\HopeLegends
def parseLocalProperties(){
    File file = rootProject.file('local.properties')
    if(file.exists()){
        InputStream inputStream = rootProject.file('local.properties').newDataInputStream();
        Properties properties = new Properties()
        properties.load(inputStream)

        if(properties.containsKey("targetProjPath")){
            println 'targetProjPath:'+properties.getProperty("targetProjPath")
            ext.targetProjPath = properties.getProperty("targetProjPath") + '/'
            println 'project[\"targetProjPath\"]:'+project["targetProjPath"]
        }
    }
}