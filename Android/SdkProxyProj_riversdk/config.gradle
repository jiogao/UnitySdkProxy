ext {
    def targetProjPath
    def sdkProxyJavaPath
    def localPath
    def target_unityLibrary_src_main
    def target_launcher_src_main
    def local_src_main
}

def initTargetProjPath() {
    //ext.targetProjPath = project["targetProjPath"]
    rootProject.ext.targetProjPath = this.parseLocalProperties()

    //公共代码位置
    rootProject.ext.sdkProxyJavaPath = "../../QKSdkProxy/"
    rootProject.ext.localPath = './'
    rootProject.ext.target_unityLibrary_src_main = targetProjPath + 'unityLibrary/src/main/'
    rootProject.ext.target_launcher_src_main = targetProjPath + 'launcher/src/main/'
    rootProject.ext.local_src_main = localPath + 'src/main/'
}

//读取local.properties配置
//请先在local.properties中添加目标工程路径, 如： targetProjPath=C\:\\Users\\K\\Desktop\\HopeLegends_Android\\ExportProj\\HopeLegends
def parseLocalProperties(){
    File file = rootProject.file('local.properties')
    if(file.exists()){
        InputStream inputStream = rootProject.file('local.properties').newDataInputStream();
        Properties properties = new Properties()
        properties.load(inputStream)

        if(properties.containsKey("targetProjPath")){
            def targetProjPath = properties.getProperty("targetProjPath") + '/'

////            把 targetProjPath  保存到 project["targetProjPath"]
//            ext.targetProjPath = targetProjPath
//            println 'project[\"targetProjPath\"]:' + project["targetProjPath"]

            return targetProjPath
        } else {
            println 'parseLocalProperties error: targetProjPath not exist!'
        }
    } else {
        println 'parseLocalProperties error: local.properties not exist!'
    }
}

//初始化目标路径
initTargetProjPath()

println 'targetProjPath:' + rootProject.ext.targetProjPath
//println 'target_unityLibrary_src_main:' + rootProject.ext.target_unityLibrary_src_main


