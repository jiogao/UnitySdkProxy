// GENERATED BY UNITY. REMOVE THIS COMMENT TO PREVENT OVERWRITING WHEN EXPORTING AGAIN

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
}
}

allprojects {
    repositories {
        google()
        jcenter()
        flatDir {
            dirs 'libs'
        }
    }
    parseLocalProperties()
    /*gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }*/
}

apply plugin: 'com.android.application'

configurations {
    sdk37Implementation
//    sdk37DebugImplementation
//    sdk37ReleaseImplementation
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':unity-android-resources')

    sdk37Implementation project(':GameUSDKLib')
}

android {

    compileSdkVersion ANDROID_COMPLIE_SDK_VERSION
    buildToolsVersion ANDROID_COMPLIE_TOOL_VERSION

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion ANDROID_BUILD_MIN_SDK_VERSION
        targetSdkVersion ANDROID_BUILD_TARGET_SDK_VERSION
        applicationId 'com.qk.hopelegends'
        ndk {
            abiFilters 'armeabi-v7a'
        }
        versionCode 1
        versionName '0.6.2'
    }

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        noCompress = ['.unity3d', '.ress', '.resource', '.obb', 'dev_setting.xml']
        ignoreAssetsPattern = "!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~"
    }

    buildTypes {
        debug {
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'
            signingConfig signingConfigs.debug
            jniDebuggable true
        }
        release {
            minifyEnabled false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'
            signingConfig signingConfigs.debug
        }
    }

    packagingOptions {
        doNotStrip '*/armeabi-v7a/*.so'
    }


    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = true
        }
    }

    //---------- productFlavors ----------
    flavorDimensions "channel"
    productFlavors {
//        sdktest {
//            dimension "channel"
//            applicationId "com.test.test"
//        }
        sdk37 {
            dimension "channel"
            applicationId "com.qk.hopelegends.sdk37"
        }
    }
    def targetProjPath = parseLocalProperties()
    println 'targetProjPath:' + targetProjPath

    //公共代码位置
    def sdkProxyJavaPath = "../QKSdkProxy/"
    def localPath = './'
    def target_unityLibrary_src_main = targetProjPath + 'unityLibrary/src/main/'
    def target_launcher_src_main = targetProjPath + 'launcher/src/main/'
    def local_src_main = localPath + 'src/main/'
    sourceSets {
        sdk37 {
            assets.srcDirs = [target_unityLibrary_src_main + 'assets']                  // asset资源目录
            jniLibs.srcDirs = [target_unityLibrary_src_main + 'jniLibs']                // jniLibs
//            java.srcDirs = [local_src_main + 'java', target_src_main + 'java']    // 指定java源代码目录
            res.srcDirs = [target_launcher_src_main + 'res']

            java.srcDirs += target_unityLibrary_src_main + 'java'
            java.srcDirs += sdkProxyJavaPath + 'java'

           // printIn 'assets.srcDirs:' + assets.srcDirs
            //printIn 'jniLibs.srcDirs:' + jniLibs.srcDirs
           // printIn 'res.srcDirs:' + res.srcDirs
           // printIn 'java.srcDirs:' + java.srcDirs
        }
//        sdktest {
////            java.srcDirs = ['./src/sdktest/' + 'java']
//        }
        sdk37 {
//            manifest.srcFile './src/sdk37/' + 'AndroidManifest.xml' // 指定清单文件
//            java.srcDirs = ['./src/sdk37/' + 'java']
        }
    }
}

//读取local.properties配置
//请先在local.properties中添加目标工程路径, 如： targetProjPath=C\:\\Users\\K\\Desktop\\HopeLegends_Android\\ExportProj\\HopeLegends
def parseLocalProperties(){
    File file = rootProject.file('local.properties')
    if(file.exists()){
        InputStream inputStream = rootProject.file('local.properties').newDataInputStream();
        Properties properties = new Properties()
        properties.load(inputStream)

        if(properties.containsKey("targetProjPath")){
            def targetProjPath = properties.getProperty("targetProjPath") + '/'

////            把 targetProjPath  保存到 project["targetProjPath"]
//            ext.targetProjPath = targetProjPath
//            println 'project[\"targetProjPath\"]:' + project["targetProjPath"]
            println 'parseLocalProperties:' + targetProjPath
            return targetProjPath
        } else {
            println 'parseLocalProperties error: targetProjPath not exist!'
        }
    } else {
        println 'parseLocalProperties error: local.properties not exist!'
    }
}